Parameters:
  EnterFunctionName:
    Description: Enter lambda Function name
    Type: String
    Default: GetRandomString
  Stage:
    Description: Enter environment variable vale for the function
    Type: String
    Default: PROD
    AllowedValues:
      - DEV
      - PROD
      - TEST

Resources:
  MyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: 
        S3Bucket: samples3totestlambda
        S3Key: get-random-string.zip
      Description: This is a basic lambda function
      Environment: 
        Variables:
          Stage: !Ref Stage
      FunctionName: !Ref EnterFunctionName
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs10.x
      Tags: 
        - Key: Name
          Value: Basic Lambda Function 
        - Key: Function
          Value: To get some random message
      Timeout: 30
      Role: !GetAtt LambdaCustomRole.Arn
      # DeadLetterConfig: 
      #   DeadLetterConfig
      # KmsKeyArn: String
      # Layers: 
      #   - String
      # ReservedConcurrentExecutions: Integer
      # TracingConfig: 
      #   TracingConfig
      # VpcConfig: 
      #   VpcConfig

  LambdaCustomRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      Description: Basic Clowdwatch logs role
      # RoleName: 
      #   Fn::Join: ["", [{"Ref": "AWS::Region"}, {"Ref": "LambdaCustomRole"}]]
      #PermissionsBoundary: string
      # Version: '2012-10-17'
      # Statement:
      # - Effect: Allow
      #   Action:
      #   - cloudwatch:*
      #   Resource: "*"
      #ManagedPolicyArns: 
      #  - String
      #MaxSessionDuration: Integer
      #Tags:
      #  - Tag

  # MyCustomLambdaPolicy:
  #   Type: AWS::IAM::Policy 
  #   Properties:
  #     PolicyName: root
  #     PolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Action:
  #           - logs:*
  #           Resource: arn:aws:logs:*:*:*
  #     Users:
  #       - DHC

  # MyCustomManagedPolicy:
  #   Type: AWS::IAM::ManagedPolicy
  #   Properties:
  #     PolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: AllowAllUsersToListAccounts
  #           Effect: Allow
  #           Action:
  #             - iam:ListAccountAliases
  #           Resource: "*"
Outputs:
  FunctionRef:
    Description: Reference of the lambda function
    Value: !Ref MyLambda
  FunctionARN:
    Description: ARN of the lambda function
    Value: !GetAtt MyLambda.Arn